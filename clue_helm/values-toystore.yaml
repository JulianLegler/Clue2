# example values for running the toystore SUT
imageRegistry: ghcr.io/clue2-sose25
sutConfigFileName: toystore.yaml
sutConfig: |
  config:
    sut: "toystore"
    namespace: "toystore"
    sut_git_repo: "https://github.com/clue2-sose25/sustainable_toystore"
    sut_path: "toystore"
    helm_chart_path: "toystore/toystore"
    values_yaml_name: "values.yaml"
    target_service_name: "teastore-webui"
    application_endpoint_path: "/tools.descartes.teastore.webui"
    default_resource_limits:
      cpu: 1000
      memory: 1024
    wait_before_workloads: 120
    wait_after_workloads: 120
  workloads:
    - name: "shaped"
      description: "Workload with custom load shape behavior."
      timeout_duration: 120
      workload_runtime: 64
      workload_settings: {}
      locust_files:
        - "sut_configs/workloads/toystore/locustfile.py"
  resource_limits: []
  variants:
    - name: "baseline"
      description: "A ToyStore application storing its data in a local SQLite DB"
      target_branch: "baseline"
      colocated_workload: true
      critical_services: ["toystore-frontend", "toystore-backend"]
      autoscaling: "cpu"
    - name: "postgres"
      description: "A ToyStore application using external Postgres DB"
      target_branch: "postgres"
      colocated_workload: true
      critical_services: ["toystore-frontend", "toystore-backend", "toystore-db"]
      autoscaling: "cpu"
clueConfig: |
  config:
    experiment_timeout: 150
    prometheus_url: "http://clue-cluster-control-plane:30090"
    docker_registry_address: ghcr.io/issafadel/sustainable_toystore
    local_public_ip: "registry"
    local_port: 5000
    remote_platform_arch: "linux/arm64/v8"
    local_platform_arch: "linux/arm64/v8"
    target_utilization: 70
clueDeployer:
  image: clue2-deployer
  tag: latest
  serviceAccountName: clue-deployer
  service:
    port: 8000
    type: ClusterIP  # Change to NodePort if needed or LoadBalancer if need to access with IP_NODE:PORT
  probes:
    path: /api/health
  env:
    DEPLOY_ONLY: "false"
    N_ITERATIONS: "1"
    SUT: toystore
    VARIANTS: baseline
    WORKLOADS: shaped
    PRECONFIGURE_CLUSTER: "false"
clueWebui:
  image: clue2-webui
  tag: latest
  service:
    type: ClusterIP  # Change to NodePort if needed or LoadBalancer if need to access with IP_NODE:PORT
    port: 80
  env:
    API_BASE_URL: http://clue-deployer:8000
loadGenerator:
  image: "clue2-loadgenerator-builder"
  tag: latest
  # Set this to mount a folder path within the chart to include all locust files
  workloadDir: default_workloads_toystore
  workloadFiles:
    example.py: |
      from locust import HttpUser, task

      class Example(HttpUser):
          @task
          def index(self):
              self.client.get("/")
ingress:
  enabled: false
  host: clue.example.com
  tls: false
rbac:
  create: false
