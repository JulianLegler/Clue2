config:
  namespace: "teastore"
  sut_git_repo: "https://github.com/ISE-TU-Berlin/sustainable_teastore.git"
  sut_path: "teastore"
  helm_chart_path: "teastore/examples/helm"
  values_yaml_name: "values.yaml"
  target_service_name: "teastore-webui" # The k8s service name (used for in-cluster communication)
  application_endpoint_path: "/tools.descartes.teastore.webui" # The specific path
  default_resource_limits:
    cpu: 1000
    memory: 1024
  wait_before_workloads: 180 # 3 minutes in seconds
  wait_after_workloads: 180 # 3 minutes in seconds

helm_replacements:
  - old_value: "descartesresearch"
    new_value: "registry:5000/clue"
  - old_value: "nodeSelector: {}"
    new_value: 'nodeSelector: {"scaphandre": "true"}'
  - old_value: "pullPolicy: IfNotPresent"
    new_value: "pullPolicy: Always"
  - old_value: 'tag: ""'
    new_value: 'tag: "__EXPERIMENT_TAG__"'
  - old_value: "enabled: false"
    new_value: "enabled: true"
    conditions:
      autoscaling: true
  - old_value: "targetCPUUtilizationPercentage: 80"
    new_value: "# targetCPUUtilizationPercentage: 80"
    conditions:
      autoscaling: true
      autoscaling_type: mem
  - old_value: "# targetMemoryUtilizationPercentage: 80"
    new_value: "targetMemoryUtilizationPercentage: 80"
    conditions:
      autoscaling: true
      autoscaling_type: mem
  - old_value: "# targetMemoryUtilizationPercentage: 80"
    new_value: "targetMemoryUtilizationPercentage: 80"
    conditions:
      autoscaling: true
      autoscaling_type: full

### RESOURCE LIMITS ###
# A list of resource limits for individual services.
# Can be left empty if a default limit is specified in the main config above.
# Required fields:
# service_name: str - the name of the service
# limit: object - the limits for the individual service
#   cpu: int - the cpu limit
#   memory: int - the memory limit
resource_limits:
  - service_name: "teastore-auth"
    limit:
      cpu: 450
      memory: 1024
  - service_name: "teastore-webui"
    limit:
      cpu: 1000
      memory: 1500
  - service_name: "teastore-recommender"
    limit:
      cpu: 1000
      memory: 1024
  - service_name: "teastore-image"
    limit:
      cpu: 1000
      memory: 1500
  - service_name: "teastore-all"
    limit:
      cpu: 1000
      memory: 2048

### WORKLOADS ###
# A list of workloads for the SUT. Required fields:
# name: str - a short name of the variant
# description: str - a short description of the variant 
# timeout_duration: int - the total timeout for the workload generator
# workload_settings: JSON - settings for the Locust workload generator. See default SUTs' configs for more detail.
workloads:
  - name: "shaped"
    description: "Workload with custom load shape behavior."
    timeout_duration: 120
    workload_settings:
      {
        "LOADGENERATOR_STAGE_DURATION": 8,
        "LOADGENERATOR_MAX_DAILY_USERS": 100,
        "LOCUST_LOCUSTFILE": "./consumerbehavior.py,./loadshapes.py",
      }
  - name: "rampup"
    description: "Workload that ramps up users at a constant rate."
    timeout_duration: 120
    workload_settings:
      {
        "LOCUST_LOCUSTFILE": "./locustfile.py",
        "LOCUST_RUN_TIME": "64s",
        "LOCUST_SPAWN_RATE": 3,
        "LOCUST_USERS": 100,
      }
  - name: "pausing"
    description: "Workload that starts 20 pausing users, no ramp-up for the duration."
    timeout_duration: 120
    workload_settings:
      {
            "LOCUST_LOCUSTFILE": "./pausing_users.py",
            "LOCUST_RUN_TIME": "64s",
            "LOCUST_SPAWN_RATE": 1,
            "LOCUST_USERS": 10,
            "PAUSE_BACKOFF": 120,
      }
  - name: "fixed"
    description: "Workload that ramps up to max users for at most 1000 requests (failed or successful), running for at most the specified duration."
    timeout_duration: 120
    workload_settings:
      {
        "LOCUST_LOCUSTFILE": "./fixed_requests.py",
        "LOCUST_RUN_TIME": "64s",
        "LOCUST_SPAWN_RATE": 1,
        "LOCUST_USERS": 100,
        "MAXIMUM_REQUESTS": 200,
      }

### VARIANTS ###
# A list of variants for the SUT. Required fields:
# name: str - a short name of the variant
# description: str - a short description of the variant 
# target_branch: str - the name of the git repository branch for the variant
# colocated_workload: bool - if the workload should be deployed in the cluster or on host machine
# critical_services: list[str] - a list of the names of the critical services to wait for before running the workload
# autoscaling: enum[str] - the type of autoscaling (options: cpu, memory, full)
variants:
  - name: "baseline"
    description: "Baseline experiment for the teastore application"
    target_branch: "vanilla"
    colocated_workload: true
    critical_services: ["teastore-auth", "teastore-registry", "teastore-webui"]
    autoscaling: "cpu"
  - name: "serverless"
    description: "Serverless experiment for the teastore application"
    target_branch: "serverless"
    colocated_workload: true
    critical_services: ["teastore-registry", "teastore-webui"]
    autoscaling: "cpu"
