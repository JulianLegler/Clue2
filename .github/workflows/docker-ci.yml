name: Build and Publish Docker Images

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read            # for checkout
  packages: write           # needed to push to GHCR

jobs:
  # 1. Determine which images need rebuilding based on changed files
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      clue_deployer: ${{ steps.filter.outputs.clue_deployer }}
      clue_dashboard: ${{ steps.filter.outputs.clue_dashboard }}
      clue_teastore: ${{ steps.filter.outputs.clue_teastore }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Detect changed directories
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: 
            clue_deployer: 
              - 'clue_deployer/**'
            clue_dashboard: 
              - 'clue_dashboard/**'
            clue_builders: 
              - 'clue_builders/**'
              - 'sut_configs/**'

  # 2. Job to build and push the clue_deployer image (if its folder changed)
  build_clue_deployer:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.clue_deployer == 'true' }}
    env:
      IMAGE_NAME: deployer    # used to form image tags
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Dockerfile (clue_deployer)
        run: docker run --rm -i hadolint/hadolint < clue_deployer/Dockerfile

      - name: Compute short Git SHA
        id: vars
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "::set-output name=short_sha::${GITHUB_SHA::7}"
      # Build & push on dev/main branches
      - name: Build and push clue_deployer image
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: clue_deployer/Dockerfile
          platforms: linux/amd64
          # Tags include short SHA and branch; main also gets "latest"
          tags: |
            ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.short_sha }}
            ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ github.ref_name == 'main' && 'ghcr.io/clue2-soso25/clue2-${{ env.IMAGE_NAME }}:latest' || '' }}
          push: true
          cache-from: type=gha,scope=clue_deployer
          cache-to: type=gha,scope=clue_deployer,mode=max


      # Build (without push) on PRs for testing
      - name: Build clue_deployer image (no push, PR test)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: clue_deployer/Dockerfile
          platforms: linux/amd64
          tags: ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:pr-test   # tag locally
          push: false
          load: true    # load image into Docker engine for testing
          cache-from: type=gha,scope=clue_deployer
          cache-to: type=gha,scope=clue_deployer,mode=max

        # Run the container (detached), check it runs, then stop it
        # shell make it better !!!!!! TBD!!!!!
      - name: Smoke test clue_deployer container
        run: |
          docker run --rm -d --name=test_clue_deployer \
             -e DEPLOY_AS_SERVICE=true \
             ghcr.io/issafadel/clue2-deployer:pr-test
          sleep 5
          docker logs test_clue_deployer || true
          docker stop test_clue_deployer



  # 3. Job to build and push the clue_dashboard image (if changed)
  build_clue_dashboard:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.clue_dashboard == 'true' }}
    env:
      IMAGE_NAME: dashboard
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint Dockerfile (clue_dashboard)
        run: docker run --rm -i hadolint/hadolint < clue_dashboard/Dockerfile
      - name: Compute short Git SHA
        id: vars
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "::set-output name=short_sha::${GITHUB_SHA::7}"
      - name: Build and push clue_dashboard image
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: clue_dashboard/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.short_sha }}
            ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ github.ref_name == 'main' && 'ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:latest' || '' }}
          push: true
          cache-from: type=gha,scope=clue_dashboard
          cache-to: type=gha,scope=clue_dashboard,mode=max
      - name: Build clue_dashboard image (no push, PR test)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: clue_dashboard/Dockerfile
          platforms: linux/amd64
          tags: ghcr.io/clue2-sose25/clue2-${{ env.IMAGE_NAME }}:pr-test
          push: false
          load: true
          cache-from: type=gha,scope=clue_dashboard
          cache-to: type=gha,scope=clue_dashboard,mode=max
      - name: Smoke test clue_dashboard container
        run: |
          docker run --rm -d --name=test_clue_dashboard ghcr.io/clue2-sose25/clue2-${IMAGE_NAME}:pr-test /bin/sh -c "echo Clue Dashboard OK"
          sleep 5
          docker logs test_clue_dashboard || true
          docker stop test_clue_dashboard
